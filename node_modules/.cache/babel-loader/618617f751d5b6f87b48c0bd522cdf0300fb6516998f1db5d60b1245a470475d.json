{"ast":null,"code":"\n\n/*const UserList = () => {\n    const [user, setUser] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        getUsers();\n    }, []);\n\n    const getUsers = async () => {\n        try {\n            const response = await axios.get('http://localhost:3001/users');\n            console.log('Datos recibidos:', response.data); // Verifica la estructura de la respuesta\n            setUser(response.data);\n        } catch (err) {\n            console.error('Error fetching users:', err);\n            setError('Error fetching users');\n        }\n    }\n\n    const deleteUsuario = async (idUsuario) => {\n        try {\n            await axios.delete(`http://localhost:3001/users/${idUsuario}`);\n            getUsers();\n        } catch (err) {\n            console.error('Error deleting user:', err);\n            setError('Error deleting user');\n        }\n    }\n\n    return (\n        <div className='has-background-light'>\n            <h1 className=\"title\" style={{ color: \"black\" }}> Usuarios </h1>\n            <h2 className=\"subtitle\" style={{ color: \"black\" }}> Lista de usuarios </h2>\n            <Link to=\"/users/add\" style={{ backgroundColor: \"#183e6e\", color: \"white\" }} className='button is-primary mb-2'> Agregar nuevo </Link>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <table className='table is-striped is-fullwidth has-background-light'>\n                <thead>\n                    <tr>\n                        <th style={{ color: \"black\" }}>Número</th>\n                        <th style={{ color: \"black\" }}>Email</th>\n                        <th style={{ color: \"black\" }}>Rol</th>\n                        <th style={{ color: \"black\" }}>Acciones</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {user.map((usuario, index) => (\n                            <tr key={usuario.idUsuario} className='has-background-light'>\n                                <td style={{ color: \"black\" }}>{index + 1}</td>\n                                <td style={{ color: \"black\" }}>{usuario.mail}</td>\n                                <td style={{ color: \"black\" }}>{usuario.rol}</td>\n                                <td style={{ color: \"black\" }}>\n                                    <Link to={`/users/edit/${usuario.idUsuario}`} className='button is-info is-small'>Editar</Link>\n                                    <button onClick={() => deleteUsuario(usuario.idUsuario)} className='button is-danger is-small'>Eliminar</button>\n                                </td>\n                            </tr>\n                        ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\nexport default UserList;*/","map":{"version":3,"names":[],"sources":["/Users/floralvarez/Documents/PS/frontend/src/components/UserList.jsx"],"sourcesContent":["\n\n\n\n\n/*const UserList = () => {\n    const [user, setUser] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        getUsers();\n    }, []);\n\n    const getUsers = async () => {\n        try {\n            const response = await axios.get('http://localhost:3001/users');\n            console.log('Datos recibidos:', response.data); // Verifica la estructura de la respuesta\n            setUser(response.data);\n        } catch (err) {\n            console.error('Error fetching users:', err);\n            setError('Error fetching users');\n        }\n    }\n\n    const deleteUsuario = async (idUsuario) => {\n        try {\n            await axios.delete(`http://localhost:3001/users/${idUsuario}`);\n            getUsers();\n        } catch (err) {\n            console.error('Error deleting user:', err);\n            setError('Error deleting user');\n        }\n    }\n\n    return (\n        <div className='has-background-light'>\n            <h1 className=\"title\" style={{ color: \"black\" }}> Usuarios </h1>\n            <h2 className=\"subtitle\" style={{ color: \"black\" }}> Lista de usuarios </h2>\n            <Link to=\"/users/add\" style={{ backgroundColor: \"#183e6e\", color: \"white\" }} className='button is-primary mb-2'> Agregar nuevo </Link>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <table className='table is-striped is-fullwidth has-background-light'>\n                <thead>\n                    <tr>\n                        <th style={{ color: \"black\" }}>Número</th>\n                        <th style={{ color: \"black\" }}>Email</th>\n                        <th style={{ color: \"black\" }}>Rol</th>\n                        <th style={{ color: \"black\" }}>Acciones</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {user.map((usuario, index) => (\n                            <tr key={usuario.idUsuario} className='has-background-light'>\n                                <td style={{ color: \"black\" }}>{index + 1}</td>\n                                <td style={{ color: \"black\" }}>{usuario.mail}</td>\n                                <td style={{ color: \"black\" }}>{usuario.rol}</td>\n                                <td style={{ color: \"black\" }}>\n                                    <Link to={`/users/edit/${usuario.idUsuario}`} className='button is-info is-small'>Editar</Link>\n                                    <button onClick={() => deleteUsuario(usuario.idUsuario)} className='button is-danger is-small'>Eliminar</button>\n                                </td>\n                            </tr>\n                        ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\nexport default UserList;*/"],"mappings":";;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}